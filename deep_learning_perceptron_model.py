# -*- coding: utf-8 -*-
"""Deep_Learning_Perceptron_Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vGvwMHwJPzXBkQnvXLbYdlZt-ag-AvL0
"""

import keras
import tensorflow

from keras.models import Sequential  #Sequential--->Pipelining
from keras.layers import Dense   #Dense---> To Define Output Layer or It will Fully Connect Input Layer and Output Layer
from keras.optimizers import Adam  #Adam--->Optimizer---Optimal Answer
import numpy as np
import matplotlib.pyplot as plt

x=np.array([3,6,9,11,8,4])
y=np.array([1,2,3,4,5,6])

print(x,y)

#Perceptron Model
model=Sequential()

#Input Layer
model.add(Dense(1,input_dim=1,activation='linear'))

#Output Layer
model.add(Dense(1,activation='linear'))
model.compile(Adam(learning_rate=0.3),loss='mse')

model.summary()

#Model Training
model.fit(x,y,epochs=30)  #---->verbose=0---Location
                          #---->verbose=1---Animated Task bar according to I/P or O/P
                          #---->verbose=2---No Taskbar showing

model.predict(x)

import pandas as pd
import seaborn as sns

adver=pd.read_csv(r'/content/advertising.csv')
adver

adver.info()

adver.isnull()

adver.isnull().sum()

for i in adver.columns:
  print(i,adver[i].unique())

sns.scatterplot(x=adver.TV,y=adver.Sales)
plt.show()

corr=adver.corr()
corr

sns.heatmap(corr,annot=True,cmap="Reds")
plt.show()

#Input or Output Creation
ip=adver.drop('Sales',axis=1)
op=adver.Sales

#Train Test Split
from sklearn.model_selection import train_test_split
xtrain,xt,ytrain,yt=train_test_split(ip,op,test_size=0.2)

model=Sequential()
#Input Layer
model.add(Dense(50,input_dim=3,activation='linear'))

#Hidden Layer
model.add(Dense(45,activation='linear'))

#Output Layer
model.add(Dense(1,activation='linear'))

#Compile
model.compile(Adam(learning_rate=0.01),loss='mse')

model.summary()

h=model.fit(xtrain,ytrain,epochs=13,validation_data=(xt,yt))

model.predict(xt)

